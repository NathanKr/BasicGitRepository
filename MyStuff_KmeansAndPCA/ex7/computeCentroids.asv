function centroids = computeCentroids(X, idx, K)
%COMPUTECENTROIDS returs the new centroids by computing the means of the 
%data points assigned to each centroid.
%   centroids = COMPUTECENTROIDS(X, idx, K) returns the new centroids by 
%   computing the means of the data points assigned to each centroid. It is
%   given a dataset X where each row is a single data point, a vector
%   idx of centroid assignments (i.e. each entry in range [1..K]) for each
%   example, and K, the number of centroids. You should return a matrix
%   centroids, where each row of centroids is the mean of the data points
%   assigned to it.
%

% idx - mx1 hold the index of the centroid for this data point

% Useful variables
[m n] = size(X);

% You need to return the following variables correctly.
centroids = zeros(K, n);


% ====================== YOUR CODE HERE ======================
% Instructions: Go over every centroid and compute mean of all points that
%               belong to it. Concretely, the row vector centroids(i, :)
%               should contain the mean of the data points assigned to
%               centroid i.
%
% Note: You can use a for-loop over the centroids to compute this.
%

for i_k=1:K
    count_datapoints_in_centroid_k=0;
    sum_datapoints_in_centroid_k=zeros(1,n);
    for i_m=1:m
        x_im = X(i_m,:);
        if idx(i_m)  == i_k
            count_datapoints_in_centroid_k =count_datapoints_in_centroid_k + 1;
            sum_datapoints_in_centroid_k = sum_datapoints_in_centroid_k + x_im;
        end
    end
    
    if count_datapoints_in_centroid_k > 0
        size( centroids(i_k) )
        size(sum_datapoints_in_centroid_k)
        centroids(i_k) = sum_datapoints_in_centroid_k/count_datapoints_in_centroid_k;
    end
    
end






% =============================================================


end

